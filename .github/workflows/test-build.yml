name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
      
    steps:
    - uses: actions/checkout@v4

    - name: Update packages
      run: |
       sudo apt update
       sudo apt -y upgrade

    - name: Install dependencies
      run: |
        sudo apt install -y cmake wget g++ git libexpat1 libpam0g-dev \
            libsdbus-c++-dev gnutls-dev freerdp2-dev libxcb1-dev libxcb-xtest0-dev libxcb-xfixes0-dev \
            libxcb-shm0-dev libxcb-randr0-dev libxcb-damage0-dev libxcb-keysyms1-dev libsdl2-image-dev qtbase5-dev \
            libxcb-xkb-dev libxkbcommon-x11-dev \
            libsdl2-image-dev qtbase5-dev libsdbus-c++-bin libsdbus-c++-dev \
            libldap-dev libcups2-dev libfuse3-dev libsystemd-dev libopus-dev libpcsclite-dev libp11-kit-dev \
            liblz4-dev libxkbfile-dev \
            libavdevice-dev libavformat-dev libavcodec-dev libswscale-dev libswresample-dev libavutil-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
        -DLTSM_BUILD_SERVER=on \
        -DLTSM_BUILD_CLIENT=on \
        -DLTSM_FFMPEG=on \
        -DLTSM_WITH_RDP=on \
        -DLTSM_FUSE2SESSION=on \
        -DLTSM_AUDIO2SESSION=on \
        -DLTSM_PCSC2SESSION=on \
        -DLTSM_PKCS11_AUTH=on \
        -DLTSM_BUILD_X11VNC=on -DLTSM_BUILD_VNC2IMAGE=on \
        -DLTSM_CUPS_BACKEND=on

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
